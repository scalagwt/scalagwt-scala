public final class LCaseClass$; extends Lscala/runtime/AbstractFunction1; implements Lscala/ScalaObject;, Lscala/Serializable; {
  public static LCaseClass$; MODULE$ = new (LCaseClass$;::this()V;)();
  
  public final Ljava/lang/String; toString() {
    return "CaseClass";
  }
  
  public Lscala/Option; unapply(LCaseClass; x$0) {
    Lscala/Option; $6$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$0, null))
      {
        $6$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $6$ = (new (Lscala/Some;::this(Ljava/lang/Object;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$0.(LCaseClass;::x()I;)())));
      }
    return $6$;
  }
  
  public LCaseClass; apply(I; x) {
    return (new (LCaseClass;::this(I;)V;)(x));
  }
  
  protected Ljava/lang/Object; readResolve() {
    return LCaseClass$;.MODULE$;
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(LCaseClass$;::apply(I;)LCaseClass;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  public this() {
    (Lscala/runtime/AbstractFunction1;::super()V;)();
    LCaseClass$;.MODULE$ = this;
  }
}
