name {
  name: "CaseClass"
}
modifiers {
  isPublic: true
}
ext {
  pkg: "java.lang"
  name: "Object"
}
implements {
  pkg: "scala"
  name: "ScalaObject"
}
implements {
  pkg: "scala"
  name: "Product"
}
implements {
  pkg: "scala"
  name: "Serializable"
}
implements {
  pkg: "scala"
  name: "Product1$mcI$sp"
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "productArity"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                signature {
                  name: "productArity"
                  owner {
                    pkg: "scala"
                    name: "Product1$class"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product1"
                    }
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
                argument {
                  type: ThisRef
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "productElement"
    paramDef {
      name: "n"
      tpe {
        type: Primitive
        primitiveType: Int
      }
    }
    returnType {
      type: Named
      namedType {
        pkg: "java.lang"
        name: "Object"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                signature {
                  name: "productElement"
                  owner {
                    pkg: "scala"
                    name: "Product1$class"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product1"
                    }
                  }
                  paramType {
                    type: Primitive
                    primitiveType: Int
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "java.lang"
                      name: "Object"
                    }
                  }
                }
                argument {
                  type: ThisRef
                }
                argument {
                  type: VarRef
                  varRef {
                    name: "n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "_1$mcD$sp"
    returnType {
      type: Primitive
      primitiveType: Double
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                signature {
                  name: "_1$mcD$sp"
                  owner {
                    pkg: "scala"
                    name: "Product1$class"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product1"
                    }
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Double
                  }
                }
                argument {
                  type: ThisRef
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "_1$mcJ$sp"
    returnType {
      type: Primitive
      primitiveType: Long
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                signature {
                  name: "_1$mcJ$sp"
                  owner {
                    pkg: "scala"
                    name: "Product1$class"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product1"
                    }
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Long
                  }
                }
                argument {
                  type: ThisRef
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Field
  modifiers {
    isPrivate: true
  }
  fieldDef {
    tpe {
      type: Primitive
      primitiveType: Int
    }
    name: "x$u0020"
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "x"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: FieldRef
              fieldRef {
                qualifier {
                  type: ThisRef
                }
                enclosingType {
                  name: "CaseClass"
                }
                name: "x$u0020"
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "copy"
    paramDef {
      name: "x"
      tpe {
        type: Primitive
        primitiveType: Int
      }
    }
    returnType {
      type: Named
      namedType {
        name: "CaseClass"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: NewObject
              newObject {
                clazz {
                  name: "CaseClass"
                }
                signature {
                  name: "new"
                  owner {
                    name: "CaseClass"
                  }
                  paramType {
                    type: Primitive
                    primitiveType: Int
                  }
                  returnType {
                    type: Named
                    namedType {
                      name: "CaseClass"
                    }
                  }
                }
                argument {
                  type: VarRef
                  varRef {
                    name: "x"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "copy$default$1"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: ThisRef
                }
                signature {
                  name: "x"
                  owner {
                    name: "CaseClass"
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "productPrefix"
    returnType {
      type: Named
      namedType {
        pkg: "java.lang"
        name: "String"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: Literal
              literal {
                type: String
                stringValue: "CaseClass"
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "productIterator"
    returnType {
      type: Named
      namedType {
        pkg: "scala.collection"
        name: "Iterator"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      pkg: "scala.runtime"
                      name: "ScalaRunTime$"
                    }
                    name: "MODULE$"
                  }
                }
                signature {
                  name: "typedProductIterator"
                  owner {
                    pkg: "scala.runtime"
                    name: "ScalaRunTime$"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product"
                    }
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "scala.collection"
                      name: "Iterator"
                    }
                  }
                }
                argument {
                  type: ThisRef
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "canEqual"
    paramDef {
      name: "x$1"
      tpe {
        type: Named
        namedType {
          pkg: "java.lang"
          name: "Object"
        }
      }
    }
    returnType {
      type: Primitive
      primitiveType: Boolean
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: InstanceOf
              instanceOf {
                expr {
                  type: VarRef
                  varRef {
                    name: "x$1"
                  }
                }
                tpe {
                  type: Named
                  namedType {
                    name: "CaseClass"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "_1"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: ThisRef
                }
                signature {
                  name: "_1$mcI$sp"
                  owner {
                    name: "CaseClass"
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "hashCode"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      pkg: "scala.runtime"
                      name: "ScalaRunTime$"
                    }
                    name: "MODULE$"
                  }
                }
                signature {
                  name: "_hashCode"
                  owner {
                    pkg: "scala.runtime"
                    name: "ScalaRunTime$"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product"
                    }
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
                argument {
                  type: ThisRef
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "toString"
    returnType {
      type: Named
      namedType {
        pkg: "java.lang"
        name: "String"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      pkg: "scala.runtime"
                      name: "ScalaRunTime$"
                    }
                    name: "MODULE$"
                  }
                }
                signature {
                  name: "_toString"
                  owner {
                    pkg: "scala.runtime"
                    name: "ScalaRunTime$"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala"
                      name: "Product"
                    }
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "java.lang"
                      name: "String"
                    }
                  }
                }
                argument {
                  type: ThisRef
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "equals"
    paramDef {
      name: "x$1"
      tpe {
        type: Named
        namedType {
          pkg: "java.lang"
          name: "Object"
        }
      }
    }
    returnType {
      type: Primitive
      primitiveType: Boolean
    }
    body {
      type: Block
      block {
        statement {
          type: VarDef
          varDef {
            tpe {
              type: Named
              namedType {
                name: "CaseClass"
              }
            }
            name: "CaseClass$1"
            initializer {
              type: Cast
              cast {
                expr {
                  type: VarRef
                  varRef {
                    name: "x$1"
                  }
                }
                tpe {
                  type: Named
                  namedType {
                    name: "CaseClass"
                  }
                }
              }
            }
          }
        }
        statement {
          type: Return
          returnStat {
            expression {
              type: Binary
              binary {
                op: Or
                lhs {
                  type: Binary
                  binary {
                    op: Equal
                    lhs {
                      type: ThisRef
                    }
                    rhs {
                      type: VarRef
                      varRef {
                        name: "x$1"
                      }
                    }
                    tpe {
                      type: Primitive
                      primitiveType: Boolean
                    }
                  }
                }
                rhs {
                  type: Binary
                  binary {
                    op: And
                    lhs {
                      type: InstanceOf
                      instanceOf {
                        expr {
                          type: VarRef
                          varRef {
                            name: "x$1"
                          }
                        }
                        tpe {
                          type: Named
                          namedType {
                            name: "CaseClass"
                          }
                        }
                      }
                    }
                    rhs {
                      type: Binary
                      binary {
                        op: And
                        lhs {
                          type: Binary
                          binary {
                            op: Equal
                            lhs {
                              type: MethodCall
                              methodCall {
                                receiver {
                                  type: ThisRef
                                }
                                signature {
                                  name: "x"
                                  owner {
                                    name: "CaseClass"
                                  }
                                  returnType {
                                    type: Primitive
                                    primitiveType: Int
                                  }
                                }
                              }
                            }
                            rhs {
                              type: MethodCall
                              methodCall {
                                receiver {
                                  type: VarRef
                                  varRef {
                                    name: "CaseClass$1"
                                  }
                                }
                                signature {
                                  name: "x"
                                  owner {
                                    name: "CaseClass"
                                  }
                                  returnType {
                                    type: Primitive
                                    primitiveType: Int
                                  }
                                }
                              }
                            }
                            tpe {
                              type: Primitive
                              primitiveType: Boolean
                            }
                          }
                        }
                        rhs {
                          type: MethodCall
                          methodCall {
                            receiver {
                              type: VarRef
                              varRef {
                                name: "CaseClass$1"
                              }
                            }
                            signature {
                              name: "canEqual"
                              owner {
                                name: "CaseClass"
                              }
                              paramType {
                                type: Named
                                namedType {
                                  pkg: "java.lang"
                                  name: "Object"
                                }
                              }
                              returnType {
                                type: Primitive
                                primitiveType: Boolean
                              }
                            }
                            argument {
                              type: ThisRef
                            }
                          }
                        }
                        tpe {
                          type: Primitive
                          primitiveType: Boolean
                        }
                      }
                    }
                    tpe {
                      type: Primitive
                      primitiveType: Boolean
                    }
                  }
                }
                tpe {
                  type: Primitive
                  primitiveType: Boolean
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "_1$mcI$sp"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: ThisRef
                }
                signature {
                  name: "x"
                  owner {
                    name: "CaseClass"
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "_1"
    returnType {
      type: Named
      namedType {
        pkg: "java.lang"
        name: "Object"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                signature {
                  name: "boxToInteger"
                  owner {
                    pkg: "scala.runtime"
                    name: "BoxesRunTime"
                  }
                  paramType {
                    type: Primitive
                    primitiveType: Int
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "java.lang"
                      name: "Integer"
                    }
                  }
                }
                argument {
                  type: MethodCall
                  methodCall {
                    receiver {
                      type: ThisRef
                    }
                    signature {
                      name: "_1"
                      owner {
                        name: "CaseClass"
                      }
                      returnType {
                        type: Primitive
                        primitiveType: Int
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    isConstructor: true
    name: "new"
    paramDef {
      name: "x"
      tpe {
        type: Primitive
        primitiveType: Int
      }
    }
    returnType {
      type: Named
      namedType {
        name: "CaseClass"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Expr
          expr {
            type: Assignment
            assignment {
              lhs {
                type: FieldRef
                fieldRef {
                  qualifier {
                    type: ThisRef
                  }
                  enclosingType {
                    name: "CaseClass"
                  }
                  name: "x$u0020"
                }
              }
              rhs {
                type: VarRef
                varRef {
                  name: "x"
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "new"
                owner {
                  pkg: "java.lang"
                  name: "Object"
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "$init$"
                owner {
                  pkg: "scala"
                  name: "Product$class"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala"
                    name: "Product"
                  }
                }
                returnType {
                  type: Void
                }
              }
              argument {
                type: ThisRef
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "$init$"
                owner {
                  pkg: "scala"
                  name: "Product1$class"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala"
                    name: "Product1"
                  }
                }
                returnType {
                  type: Void
                }
              }
              argument {
                type: ThisRef
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "$init$"
                owner {
                  pkg: "scala"
                  name: "Product1$mcI$sp$class"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala"
                    name: "Product1$mcI$sp"
                  }
                }
                returnType {
                  type: Void
                }
              }
              argument {
                type: ThisRef
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
    isFinal: true
    isStatic: true
  }
  method {
    name: "andThen"
    paramDef {
      name: "x_0"
      tpe {
        type: Named
        namedType {
          pkg: "scala"
          name: "Function1"
        }
      }
    }
    returnType {
      type: Named
      namedType {
        pkg: "scala"
        name: "Function1"
      }
    }
    body {
      type: Return
      returnStat {
        expression {
          type: MethodCall
          methodCall {
            receiver {
              type: FieldRef
              fieldRef {
                enclosingType {
                  name: "CaseClass$"
                }
                name: "MODULE$"
              }
            }
            signature {
              name: "andThen"
              owner {
                pkg: "scala.runtime"
                name: "AbstractFunction1"
              }
              paramType {
                type: Named
                namedType {
                  pkg: "scala"
                  name: "Function1"
                }
              }
              returnType {
                type: Named
                namedType {
                  pkg: "scala"
                  name: "Function1"
                }
              }
            }
            argument {
              type: VarRef
              varRef {
                name: "x_0"
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
    isFinal: true
    isStatic: true
  }
  method {
    name: "compose"
    paramDef {
      name: "x_0"
      tpe {
        type: Named
        namedType {
          pkg: "scala"
          name: "Function1"
        }
      }
    }
    returnType {
      type: Named
      namedType {
        pkg: "scala"
        name: "Function1"
      }
    }
    body {
      type: Return
      returnStat {
        expression {
          type: MethodCall
          methodCall {
            receiver {
              type: FieldRef
              fieldRef {
                enclosingType {
                  name: "CaseClass$"
                }
                name: "MODULE$"
              }
            }
            signature {
              name: "compose"
              owner {
                pkg: "scala.runtime"
                name: "AbstractFunction1"
              }
              paramType {
                type: Named
                namedType {
                  pkg: "scala"
                  name: "Function1"
                }
              }
              returnType {
                type: Named
                namedType {
                  pkg: "scala"
                  name: "Function1"
                }
              }
            }
            argument {
              type: VarRef
              varRef {
                name: "x_0"
              }
            }
          }
        }
      }
    }
  }
}
