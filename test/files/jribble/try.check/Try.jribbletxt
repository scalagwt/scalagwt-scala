name {
  name: "Try"
}
modifiers {
  isPublic: true
}
ext {
  pkg: "java.lang"
  name: "Object"
}
implements {
  pkg: "scala"
  name: "ScalaObject"
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "simpleTry"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: Try
          tryStat {
            block {
              type: Block
              block {
              }
            }
            catch {
              tpe {
                pkg: "java.lang"
                name: "Throwable"
              }
              param: "ex8"
              body {
                type: Block
                block {
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Primitive
                        primitiveType: Boolean
                      }
                      name: "rc9"
                      initializer {
                        type: Literal
                        literal {
                          type: Boolean
                          boolValue: false
                        }
                      }
                    }
                  }
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Named
                        namedType {
                          pkg: "java.lang"
                          name: "Exception"
                        }
                      }
                      name: "x6"
                      initializer {
                        type: Literal
                        literal {
                          type: Null
                        }
                      }
                    }
                  }
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala"
                          name: "Option"
                        }
                      }
                      name: "zero11"
                      initializer {
                        type: FieldRef
                        fieldRef {
                          enclosingType {
                            pkg: "scala"
                            name: "None$"
                          }
                          name: "MODULE$"
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala"
                              name: "None$"
                            }
                          }
                        }
                      }
                    }
                  }
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Named
                        namedType {
                          pkg: "java.lang"
                          name: "Throwable"
                        }
                      }
                      name: "x5"
                      initializer {
                        type: VarRef
                        varRef {
                          name: "ex8"
                        }
                      }
                    }
                  }
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.runtime"
                          name: "BoxedUnit"
                        }
                      }
                      name: "matchRes12"
                      initializer {
                        type: FieldRef
                        fieldRef {
                          enclosingType {
                            pkg: "scala.runtime"
                            name: "BoxedUnit"
                          }
                          name: "UNIT"
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala.runtime"
                              name: "BoxedUnit"
                            }
                          }
                        }
                      }
                    }
                  }
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Primitive
                        primitiveType: Boolean
                      }
                      name: "keepGoing10"
                      initializer {
                        type: Literal
                        literal {
                          type: Boolean
                          boolValue: true
                        }
                      }
                    }
                  }
                  statement {
                    type: Block
                    block {
                      statement {
                        type: If
                        ifStat {
                          condition {
                            type: InstanceOf
                            instanceOf {
                              expr {
                                type: VarRef
                                varRef {
                                  name: "x5"
                                }
                              }
                              tpe {
                                type: Named
                                namedType {
                                  pkg: "java.lang"
                                  name: "Exception"
                                }
                              }
                            }
                          }
                          then {
                            type: Block
                            block {
                              statement {
                                type: Expr
                                expr {
                                  type: Assignment
                                  assignment {
                                    lhs {
                                      type: VarRef
                                      varRef {
                                        name: "rc9"
                                      }
                                    }
                                    rhs {
                                      type: Literal
                                      literal {
                                        type: Boolean
                                        boolValue: true
                                      }
                                    }
                                  }
                                }
                              }
                              statement {
                                type: Expr
                                expr {
                                  type: Assignment
                                  assignment {
                                    lhs {
                                      type: VarRef
                                      varRef {
                                        name: "x6"
                                      }
                                    }
                                    rhs {
                                      type: Cast
                                      cast {
                                        expr {
                                          type: VarRef
                                          varRef {
                                            name: "x5"
                                          }
                                        }
                                        tpe {
                                          type: Named
                                          namedType {
                                            pkg: "java.lang"
                                            name: "Exception"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              statement {
                                type: VarDef
                                varDef {
                                  tpe {
                                    type: Named
                                    namedType {
                                      pkg: "scala"
                                      name: "Option"
                                    }
                                  }
                                  name: "$1$"
                                }
                              }
                              statement {
                                type: If
                                ifStat {
                                  condition {
                                    type: MethodCall
                                    methodCall {
                                      signature {
                                        name: "equals"
                                        owner {
                                          pkg: "scala.runtime"
                                          name: "BoxesRunTime"
                                        }
                                        paramType {
                                          type: Named
                                          namedType {
                                            pkg: "java.lang"
                                            name: "Object"
                                          }
                                        }
                                        paramType {
                                          type: Named
                                          namedType {
                                            pkg: "java.lang"
                                            name: "Object"
                                          }
                                        }
                                        returnType {
                                          type: Primitive
                                          primitiveType: Boolean
                                        }
                                      }
                                      argument {
                                        type: MethodCall
                                        methodCall {
                                          receiver {
                                            type: VarRef
                                            varRef {
                                              name: "x6"
                                            }
                                          }
                                          signature {
                                            name: "getMessage"
                                            owner {
                                              pkg: "java.lang"
                                              name: "Throwable"
                                            }
                                            returnType {
                                              type: Named
                                              namedType {
                                                pkg: "java.lang"
                                                name: "String"
                                              }
                                            }
                                          }
                                        }
                                      }
                                      argument {
                                        type: Literal
                                        literal {
                                          type: String
                                          stringValue: "test"
                                        }
                                      }
                                    }
                                  }
                                  then {
                                    type: Block
                                    block {
                                      statement {
                                        type: Expr
                                        expr {
                                          type: Assignment
                                          assignment {
                                            lhs {
                                              type: VarRef
                                              varRef {
                                                name: "keepGoing10"
                                              }
                                            }
                                            rhs {
                                              type: Literal
                                              literal {
                                                type: Boolean
                                                boolValue: false
                                              }
                                            }
                                          }
                                        }
                                      }
                                      statement {
                                        type: Expr
                                        expr {
                                          type: MethodCall
                                          methodCall {
                                            receiver {
                                              type: FieldRef
                                              fieldRef {
                                                enclosingType {
                                                  pkg: "scala"
                                                  name: "Predef$"
                                                }
                                                name: "MODULE$"
                                                tpe {
                                                  type: Named
                                                  namedType {
                                                    pkg: "scala"
                                                    name: "Predef$"
                                                  }
                                                }
                                              }
                                            }
                                            signature {
                                              name: "println"
                                              owner {
                                                pkg: "scala"
                                                name: "Predef$"
                                              }
                                              paramType {
                                                type: Named
                                                namedType {
                                                  pkg: "java.lang"
                                                  name: "Object"
                                                }
                                              }
                                              returnType {
                                                type: Void
                                              }
                                            }
                                            argument {
                                              type: Binary
                                              binary {
                                                op: Concat
                                                lhs {
                                                  type: Literal
                                                  literal {
                                                    type: String
                                                    stringValue: "first case "
                                                  }
                                                }
                                                rhs {
                                                  type: VarRef
                                                  varRef {
                                                    name: "x6"
                                                  }
                                                }
                                                tpe {
                                                  type: Named
                                                  namedType {
                                                    pkg: "java.lang"
                                                    name: "String"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      statement {
                                        type: Expr
                                        expr {
                                          type: Assignment
                                          assignment {
                                            lhs {
                                              type: VarRef
                                              varRef {
                                                name: "$1$"
                                              }
                                            }
                                            rhs {
                                              type: VarRef
                                              varRef {
                                                name: "zero11"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  elsee {
                                    type: Block
                                    block {
                                      statement {
                                        type: Expr
                                        expr {
                                          type: Assignment
                                          assignment {
                                            lhs {
                                              type: VarRef
                                              varRef {
                                                name: "$1$"
                                              }
                                            }
                                            rhs {
                                              type: VarRef
                                              varRef {
                                                name: "zero11"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          elsee {
                            type: Block
                            block {
                            }
                          }
                        }
                      }
                      statement {
                        type: VarDef
                        varDef {
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala"
                              name: "Option"
                            }
                          }
                          name: "$2$"
                        }
                      }
                      statement {
                        type: If
                        ifStat {
                          condition {
                            type: VarRef
                            varRef {
                              name: "keepGoing10"
                            }
                          }
                          then {
                            type: Block
                            block {
                              statement {
                                type: VarDef
                                varDef {
                                  tpe {
                                    type: Named
                                    namedType {
                                      pkg: "scala"
                                      name: "Option"
                                    }
                                  }
                                  name: "$3$"
                                }
                              }
                              statement {
                                type: If
                                ifStat {
                                  condition {
                                    type: VarRef
                                    varRef {
                                      name: "rc9"
                                    }
                                  }
                                  then {
                                    type: Block
                                    block {
                                      statement {
                                        type: Expr
                                        expr {
                                          type: Assignment
                                          assignment {
                                            lhs {
                                              type: VarRef
                                              varRef {
                                                name: "keepGoing10"
                                              }
                                            }
                                            rhs {
                                              type: Literal
                                              literal {
                                                type: Boolean
                                                boolValue: false
                                              }
                                            }
                                          }
                                        }
                                      }
                                      statement {
                                        type: Expr
                                        expr {
                                          type: MethodCall
                                          methodCall {
                                            receiver {
                                              type: FieldRef
                                              fieldRef {
                                                enclosingType {
                                                  pkg: "scala"
                                                  name: "Predef$"
                                                }
                                                name: "MODULE$"
                                                tpe {
                                                  type: Named
                                                  namedType {
                                                    pkg: "scala"
                                                    name: "Predef$"
                                                  }
                                                }
                                              }
                                            }
                                            signature {
                                              name: "println"
                                              owner {
                                                pkg: "scala"
                                                name: "Predef$"
                                              }
                                              paramType {
                                                type: Named
                                                namedType {
                                                  pkg: "java.lang"
                                                  name: "Object"
                                                }
                                              }
                                              returnType {
                                                type: Void
                                              }
                                            }
                                            argument {
                                              type: Binary
                                              binary {
                                                op: Concat
                                                lhs {
                                                  type: Literal
                                                  literal {
                                                    type: String
                                                    stringValue: "second case "
                                                  }
                                                }
                                                rhs {
                                                  type: VarRef
                                                  varRef {
                                                    name: "x6"
                                                  }
                                                }
                                                tpe {
                                                  type: Named
                                                  namedType {
                                                    pkg: "java.lang"
                                                    name: "String"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      statement {
                                        type: Expr
                                        expr {
                                          type: Assignment
                                          assignment {
                                            lhs {
                                              type: VarRef
                                              varRef {
                                                name: "$3$"
                                              }
                                            }
                                            rhs {
                                              type: VarRef
                                              varRef {
                                                name: "zero11"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  elsee {
                                    type: Block
                                    block {
                                      statement {
                                        type: Expr
                                        expr {
                                          type: Assignment
                                          assignment {
                                            lhs {
                                              type: VarRef
                                              varRef {
                                                name: "$3$"
                                              }
                                            }
                                            rhs {
                                              type: VarRef
                                              varRef {
                                                name: "zero11"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              statement {
                                type: Expr
                                expr {
                                  type: Assignment
                                  assignment {
                                    lhs {
                                      type: VarRef
                                      varRef {
                                        name: "$2$"
                                      }
                                    }
                                    rhs {
                                      type: VarRef
                                      varRef {
                                        name: "$3$"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          elsee {
                            type: Block
                            block {
                              statement {
                                type: Expr
                                expr {
                                  type: Assignment
                                  assignment {
                                    lhs {
                                      type: VarRef
                                      varRef {
                                        name: "$2$"
                                      }
                                    }
                                    rhs {
                                      type: VarRef
                                      varRef {
                                        name: "zero11"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  statement {
                    type: If
                    ifStat {
                      condition {
                        type: VarRef
                        varRef {
                          name: "keepGoing10"
                        }
                      }
                      then {
                        type: Block
                        block {
                          statement {
                            type: Throw
                            throwStat {
                              expression {
                                type: VarRef
                                varRef {
                                  name: "ex8"
                                }
                              }
                            }
                          }
                        }
                      }
                      elsee {
                        type: Block
                        block {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "typedWildcardTry"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: Try
          tryStat {
            block {
              type: Block
              block {
              }
            }
            catch {
              tpe {
                pkg: "java.lang"
                name: "ClassCastException"
              }
              param: "$4$"
              body {
                type: Block
                block {
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "wildcardTry"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: Try
          tryStat {
            block {
              type: Block
              block {
              }
            }
            catch {
              tpe {
                pkg: "java.lang"
                name: "Throwable"
              }
              param: "$5$"
              body {
                type: Block
                block {
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "tryPlusFinally"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: Try
          tryStat {
            block {
              type: Block
              block {
              }
            }
            finalizer {
              type: Block
              block {
                statement {
                  type: Expr
                  expr {
                    type: MethodCall
                    methodCall {
                      receiver {
                        type: FieldRef
                        fieldRef {
                          enclosingType {
                            pkg: "scala"
                            name: "Predef$"
                          }
                          name: "MODULE$"
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala"
                              name: "Predef$"
                            }
                          }
                        }
                      }
                      signature {
                        name: "println"
                        owner {
                          pkg: "scala"
                          name: "Predef$"
                        }
                        paramType {
                          type: Named
                          namedType {
                            pkg: "java.lang"
                            name: "Object"
                          }
                        }
                        returnType {
                          type: Void
                        }
                      }
                      argument {
                        type: Literal
                        literal {
                          type: String
                          stringValue: "finally"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "catchAndPassToLambda"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: Try
          tryStat {
            block {
              type: Block
              block {
              }
            }
            catch {
              tpe {
                pkg: "java.lang"
                name: "Exception"
              }
              param: "ex$1"
              body {
                type: Block
                block {
                  statement {
                    type: VarDef
                    varDef {
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala"
                          name: "Function0"
                        }
                      }
                      name: "f"
                      initializer {
                        type: NewObject
                        newObject {
                          clazz {
                            name: "Try$$anonfun$1"
                          }
                          signature {
                            name: "new"
                            owner {
                              name: "Try$$anonfun$1"
                            }
                            paramType {
                              type: Named
                              namedType {
                                name: "Try"
                              }
                            }
                            paramType {
                              type: Named
                              namedType {
                                pkg: "java.lang"
                                name: "Exception"
                              }
                            }
                            returnType {
                              type: Named
                              namedType {
                                name: "Try$$anonfun$1"
                              }
                            }
                          }
                          argument {
                            type: ThisRef
                          }
                          argument {
                            type: VarRef
                            varRef {
                              name: "ex$1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    isConstructor: true
    name: "new"
    returnType {
      type: Named
      namedType {
        name: "Try"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "new"
                owner {
                  pkg: "java.lang"
                  name: "Object"
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
