name {
  name: "Foo"
}
modifiers {
  isPublic: true
}
ext {
  pkg: "java.lang"
  name: "Object"
}
implements {
  pkg: "scala"
  name: "ScalaObject"
}
member {
  type: Field
  modifiers {
    isPrivate: true
  }
  fieldDef {
    tpe {
      type: Primitive
      primitiveType: Int
    }
    name: "referCompanionVal1$u0020"
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "referCompanionVal1"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: FieldRef
              fieldRef {
                qualifier {
                  type: ThisRef
                }
                enclosingType {
                  name: "Foo"
                }
                name: "referCompanionVal1$u0020"
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "referCompanionVal2"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      name: "Foo$"
                    }
                    name: "MODULE$"
                  }
                }
                signature {
                  name: "x"
                  owner {
                    name: "Foo$"
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Field
  modifiers {
    isPrivate: true
  }
  fieldDef {
    tpe {
      type: Primitive
      primitiveType: Int
    }
    name: "referCompanionDef1$u0020"
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "referCompanionDef1"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: FieldRef
              fieldRef {
                qualifier {
                  type: ThisRef
                }
                enclosingType {
                  name: "Foo"
                }
                name: "referCompanionDef1$u0020"
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "referCompanionDef2"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      name: "Foo$"
                    }
                    name: "MODULE$"
                  }
                }
                signature {
                  name: "y"
                  owner {
                    name: "Foo$"
                  }
                  returnType {
                    type: Primitive
                    primitiveType: Int
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    isConstructor: true
    name: "new"
    returnType {
      type: Named
      namedType {
        name: "Foo"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "new"
                owner {
                  pkg: "java.lang"
                  name: "Object"
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: Assignment
            assignment {
              lhs {
                type: FieldRef
                fieldRef {
                  qualifier {
                    type: ThisRef
                  }
                  enclosingType {
                    name: "Foo"
                  }
                  name: "referCompanionVal1$u0020"
                }
              }
              rhs {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        name: "Foo$"
                      }
                      name: "MODULE$"
                    }
                  }
                  signature {
                    name: "x"
                    owner {
                      name: "Foo$"
                    }
                    returnType {
                      type: Primitive
                      primitiveType: Int
                    }
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: Assignment
            assignment {
              lhs {
                type: FieldRef
                fieldRef {
                  qualifier {
                    type: ThisRef
                  }
                  enclosingType {
                    name: "Foo"
                  }
                  name: "referCompanionDef1$u0020"
                }
              }
              rhs {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        name: "Foo$"
                      }
                      name: "MODULE$"
                    }
                  }
                  signature {
                    name: "y"
                    owner {
                      name: "Foo$"
                    }
                    returnType {
                      type: Primitive
                      primitiveType: Int
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
    isFinal: true
    isStatic: true
  }
  method {
    name: "y"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Return
      returnStat {
        expression {
          type: MethodCall
          methodCall {
            receiver {
              type: FieldRef
              fieldRef {
                enclosingType {
                  name: "Foo$"
                }
                name: "MODULE$"
              }
            }
            signature {
              name: "y"
              owner {
                name: "Foo$"
              }
              returnType {
                type: Primitive
                primitiveType: Int
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
    isFinal: true
    isStatic: true
  }
  method {
    name: "x"
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Return
      returnStat {
        expression {
          type: MethodCall
          methodCall {
            receiver {
              type: FieldRef
              fieldRef {
                enclosingType {
                  name: "Foo$"
                }
                name: "MODULE$"
              }
            }
            signature {
              name: "x"
              owner {
                name: "Foo$"
              }
              returnType {
                type: Primitive
                primitiveType: Int
              }
            }
          }
        }
      }
    }
  }
}
