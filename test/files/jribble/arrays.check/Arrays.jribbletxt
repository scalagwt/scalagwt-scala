name {
  name: "Arrays"
}
modifiers {
  isPublic: true
}
ext {
  pkg: "java.lang"
  name: "Object"
}
implements {
  pkg: "scala"
  name: "ScalaObject"
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "values"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: VarDef
          varDef {
            tpe {
              type: Named
              namedType {
                pkg: "scala.collection.immutable"
                name: "List"
              }
            }
            name: "x"
            initializer {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      pkg: "scala.collection.immutable"
                      name: "List$"
                    }
                    name: "MODULE$"
                    tpe {
                      type: Named
                      namedType {
                        pkg: "scala.collection.immutable"
                        name: "List$"
                      }
                    }
                  }
                }
                signature {
                  name: "apply"
                  owner {
                    pkg: "scala.collection.immutable"
                    name: "List$"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala.collection"
                      name: "Seq"
                    }
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "scala.collection.immutable"
                      name: "List"
                    }
                  }
                }
                argument {
                  type: MethodCall
                  methodCall {
                    receiver {
                      type: FieldRef
                      fieldRef {
                        enclosingType {
                          pkg: "scala"
                          name: "Predef$"
                        }
                        name: "MODULE$"
                        tpe {
                          type: Named
                          namedType {
                            pkg: "scala"
                            name: "Predef$"
                          }
                        }
                      }
                    }
                    signature {
                      name: "wrapIntArray"
                      owner {
                        pkg: "scala"
                        name: "LowPriorityImplicits"
                      }
                      paramType {
                        type: Array
                        arrayElementType {
                          type: Primitive
                          primitiveType: Int
                        }
                      }
                      returnType {
                        type: Named
                        namedType {
                          pkg: "scala.collection.mutable"
                          name: "WrappedArray"
                        }
                      }
                    }
                    argument {
                      type: NewArray
                      newArray {
                        elementType {
                          type: Primitive
                          primitiveType: Int
                        }
                        dimensions: 1
                        initExpr {
                          type: Literal
                          literal {
                            type: Int
                            intValue: 0
                          }
                        }
                        initExpr {
                          type: Literal
                          literal {
                            type: Int
                            intValue: 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "newArray"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: VarDef
          varDef {
            tpe {
              type: Array
              arrayElementType {
                type: Array
                arrayElementType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
            }
            name: "x"
            initializer {
              type: NewArray
              newArray {
                elementType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
                dimensions: 2
                dimensionExpr {
                  type: Literal
                  literal {
                    type: Int
                    intValue: 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "returnOneArray"
    paramDef {
      name: "evidence$1"
      tpe {
        type: Named
        namedType {
          pkg: "scala.reflect"
          name: "ClassManifest"
        }
      }
    }
    returnType {
      type: Named
      namedType {
        pkg: "java.lang"
        name: "Object"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      pkg: "scala"
                      name: "Array$"
                    }
                    name: "MODULE$"
                    tpe {
                      type: Named
                      namedType {
                        pkg: "scala"
                        name: "Array$"
                      }
                    }
                  }
                }
                signature {
                  name: "ofDim"
                  owner {
                    pkg: "scala"
                    name: "Array$"
                  }
                  paramType {
                    type: Primitive
                    primitiveType: Int
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala.reflect"
                      name: "ClassManifest"
                    }
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "java.lang"
                      name: "Object"
                    }
                  }
                }
                argument {
                  type: Literal
                  literal {
                    type: Int
                    intValue: 1
                  }
                }
                argument {
                  type: VarRef
                  varRef {
                    name: "evidence$1"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "getOneArray"
    paramDef {
      name: "evidence$2"
      tpe {
        type: Named
        namedType {
          pkg: "scala.reflect"
          name: "ClassManifest"
        }
      }
    }
    returnType {
      type: Named
      namedType {
        pkg: "java.lang"
        name: "Object"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: ThisRef
                }
                signature {
                  name: "returnOneArray"
                  owner {
                    name: "Arrays"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala.reflect"
                      name: "ClassManifest"
                    }
                  }
                  returnType {
                    type: Named
                    namedType {
                      pkg: "java.lang"
                      name: "Object"
                    }
                  }
                }
                argument {
                  type: VarRef
                  varRef {
                    name: "evidence$2"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "returnTwoArray"
    paramDef {
      name: "evidence$3"
      tpe {
        type: Named
        namedType {
          pkg: "scala.reflect"
          name: "ClassManifest"
        }
      }
    }
    returnType {
      type: Array
      arrayElementType {
        type: Named
        namedType {
          pkg: "java.lang"
          name: "Object"
        }
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: FieldRef
                  fieldRef {
                    enclosingType {
                      pkg: "scala"
                      name: "Array$"
                    }
                    name: "MODULE$"
                    tpe {
                      type: Named
                      namedType {
                        pkg: "scala"
                        name: "Array$"
                      }
                    }
                  }
                }
                signature {
                  name: "ofDim"
                  owner {
                    pkg: "scala"
                    name: "Array$"
                  }
                  paramType {
                    type: Primitive
                    primitiveType: Int
                  }
                  paramType {
                    type: Primitive
                    primitiveType: Int
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala.reflect"
                      name: "ClassManifest"
                    }
                  }
                  returnType {
                    type: Array
                    arrayElementType {
                      type: Named
                      namedType {
                        pkg: "java.lang"
                        name: "Object"
                      }
                    }
                  }
                }
                argument {
                  type: Literal
                  literal {
                    type: Int
                    intValue: 1
                  }
                }
                argument {
                  type: Literal
                  literal {
                    type: Int
                    intValue: 1
                  }
                }
                argument {
                  type: VarRef
                  varRef {
                    name: "evidence$3"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "getTwoArray"
    paramDef {
      name: "evidence$4"
      tpe {
        type: Named
        namedType {
          pkg: "scala.reflect"
          name: "ClassManifest"
        }
      }
    }
    returnType {
      type: Array
      arrayElementType {
        type: Named
        namedType {
          pkg: "java.lang"
          name: "Object"
        }
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: MethodCall
              methodCall {
                receiver {
                  type: ThisRef
                }
                signature {
                  name: "returnTwoArray"
                  owner {
                    name: "Arrays"
                  }
                  paramType {
                    type: Named
                    namedType {
                      pkg: "scala.reflect"
                      name: "ClassManifest"
                    }
                  }
                  returnType {
                    type: Array
                    arrayElementType {
                      type: Named
                      namedType {
                        pkg: "java.lang"
                        name: "Object"
                      }
                    }
                  }
                }
                argument {
                  type: VarRef
                  varRef {
                    name: "evidence$4"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "arrayLength"
    paramDef {
      name: "x"
      tpe {
        type: Array
        arrayElementType {
          type: Primitive
          primitiveType: Int
        }
      }
    }
    returnType {
      type: Primitive
      primitiveType: Int
    }
    body {
      type: Block
      block {
        statement {
          type: Return
          returnStat {
            expression {
              type: ArrayLength
              arrayLength {
                array {
                  type: VarRef
                  varRef {
                    name: "x"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    name: "genericArrays"
    returnType {
      type: Void
    }
    body {
      type: Block
      block {
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "returnOneArray"
                owner {
                  name: "Arrays"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala.reflect"
                    name: "ClassManifest"
                  }
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
              argument {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        pkg: "scala.reflect"
                        name: "FactoryManifest$"
                      }
                      name: "MODULE$"
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.reflect"
                          name: "FactoryManifest$"
                        }
                      }
                    }
                  }
                  signature {
                    name: "Int"
                    owner {
                      pkg: "scala.reflect"
                      name: "FactoryManifest$"
                    }
                    returnType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryManifest$AnyValManifest"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "returnOneArray"
                owner {
                  name: "Arrays"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala.reflect"
                    name: "ClassManifest"
                  }
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
              argument {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest$"
                      }
                      name: "MODULE$"
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                      }
                    }
                  }
                  signature {
                    name: "classType"
                    owner {
                      pkg: "scala.reflect"
                      name: "FactoryClassManifest$"
                    }
                    paramType {
                      type: Named
                      namedType {
                        pkg: "java.lang"
                        name: "Class"
                      }
                    }
                    paramType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest$Factory"
                      }
                    }
                    returnType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest"
                      }
                    }
                  }
                  argument {
                    type: ClassLiteral
                    classLiteral {
                      tpe {
                        type: Named
                        namedType {
                          pkg: "java.lang"
                          name: "String"
                        }
                      }
                    }
                  }
                  argument {
                    type: NewObject
                    newObject {
                      clazz {
                        name: "Arrays$$anon$1"
                      }
                      signature {
                        name: "new"
                        owner {
                          name: "Arrays$$anon$1"
                        }
                        paramType {
                          type: Named
                          namedType {
                            name: "Arrays"
                          }
                        }
                        returnType {
                          type: Named
                          namedType {
                            name: "Arrays$$anon$1"
                          }
                        }
                      }
                      argument {
                        type: ThisRef
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "returnOneArray"
                owner {
                  name: "Arrays"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala.reflect"
                    name: "ClassManifest"
                  }
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
              argument {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        pkg: "scala.reflect"
                        name: "FactoryManifest$"
                      }
                      name: "MODULE$"
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.reflect"
                          name: "FactoryManifest$"
                        }
                      }
                    }
                  }
                  signature {
                    name: "Object"
                    owner {
                      pkg: "scala.reflect"
                      name: "FactoryManifest$"
                    }
                    returnType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryManifest"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "returnOneArray"
                owner {
                  name: "Arrays"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala.reflect"
                    name: "ClassManifest"
                  }
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
              argument {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest$"
                      }
                      name: "MODULE$"
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                      }
                    }
                  }
                  signature {
                    name: "arrayType"
                    owner {
                      pkg: "scala.reflect"
                      name: "FactoryClassManifest$"
                    }
                    paramType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "OptManifest"
                      }
                    }
                    returnType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest"
                      }
                    }
                  }
                  argument {
                    type: MethodCall
                    methodCall {
                      receiver {
                        type: FieldRef
                        fieldRef {
                          enclosingType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest$"
                          }
                          name: "MODULE$"
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala.reflect"
                              name: "FactoryClassManifest$"
                            }
                          }
                        }
                      }
                      signature {
                        name: "classType"
                        owner {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                        paramType {
                          type: Named
                          namedType {
                            pkg: "java.lang"
                            name: "Class"
                          }
                        }
                        paramType {
                          type: Named
                          namedType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest$Factory"
                          }
                        }
                        returnType {
                          type: Named
                          namedType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest"
                          }
                        }
                      }
                      argument {
                        type: ClassLiteral
                        classLiteral {
                          tpe {
                            type: Named
                            namedType {
                              pkg: "java.lang"
                              name: "String"
                            }
                          }
                        }
                      }
                      argument {
                        type: NewObject
                        newObject {
                          clazz {
                            name: "Arrays$$anon$3"
                          }
                          signature {
                            name: "new"
                            owner {
                              name: "Arrays$$anon$3"
                            }
                            paramType {
                              type: Named
                              namedType {
                                name: "Arrays"
                              }
                            }
                            returnType {
                              type: Named
                              namedType {
                                name: "Arrays$$anon$3"
                              }
                            }
                          }
                          argument {
                            type: ThisRef
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "returnOneArray"
                owner {
                  name: "Arrays"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala.reflect"
                    name: "ClassManifest"
                  }
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
              argument {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest$"
                      }
                      name: "MODULE$"
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                      }
                    }
                  }
                  signature {
                    name: "arrayType"
                    owner {
                      pkg: "scala.reflect"
                      name: "FactoryClassManifest$"
                    }
                    paramType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "OptManifest"
                      }
                    }
                    returnType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest"
                      }
                    }
                  }
                  argument {
                    type: MethodCall
                    methodCall {
                      receiver {
                        type: FieldRef
                        fieldRef {
                          enclosingType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest$"
                          }
                          name: "MODULE$"
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala.reflect"
                              name: "FactoryClassManifest$"
                            }
                          }
                        }
                      }
                      signature {
                        name: "arrayType"
                        owner {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                        paramType {
                          type: Named
                          namedType {
                            pkg: "scala.reflect"
                            name: "OptManifest"
                          }
                        }
                        returnType {
                          type: Named
                          namedType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest"
                          }
                        }
                      }
                      argument {
                        type: MethodCall
                        methodCall {
                          receiver {
                            type: FieldRef
                            fieldRef {
                              enclosingType {
                                pkg: "scala.reflect"
                                name: "FactoryClassManifest$"
                              }
                              name: "MODULE$"
                              tpe {
                                type: Named
                                namedType {
                                  pkg: "scala.reflect"
                                  name: "FactoryClassManifest$"
                                }
                              }
                            }
                          }
                          signature {
                            name: "classType"
                            owner {
                              pkg: "scala.reflect"
                              name: "FactoryClassManifest$"
                            }
                            paramType {
                              type: Named
                              namedType {
                                pkg: "java.lang"
                                name: "Class"
                              }
                            }
                            paramType {
                              type: Named
                              namedType {
                                pkg: "scala.reflect"
                                name: "FactoryClassManifest$Factory"
                              }
                            }
                            returnType {
                              type: Named
                              namedType {
                                pkg: "scala.reflect"
                                name: "FactoryClassManifest"
                              }
                            }
                          }
                          argument {
                            type: ClassLiteral
                            classLiteral {
                              tpe {
                                type: Named
                                namedType {
                                  pkg: "java.lang"
                                  name: "String"
                                }
                              }
                            }
                          }
                          argument {
                            type: NewObject
                            newObject {
                              clazz {
                                name: "Arrays$$anon$5"
                              }
                              signature {
                                name: "new"
                                owner {
                                  name: "Arrays$$anon$5"
                                }
                                paramType {
                                  type: Named
                                  namedType {
                                    name: "Arrays"
                                  }
                                }
                                returnType {
                                  type: Named
                                  namedType {
                                    name: "Arrays$$anon$5"
                                  }
                                }
                              }
                              argument {
                                type: ThisRef
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "returnOneArray"
                owner {
                  name: "Arrays"
                }
                paramType {
                  type: Named
                  namedType {
                    pkg: "scala.reflect"
                    name: "ClassManifest"
                  }
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
              argument {
                type: MethodCall
                methodCall {
                  receiver {
                    type: FieldRef
                    fieldRef {
                      enclosingType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest$"
                      }
                      name: "MODULE$"
                      tpe {
                        type: Named
                        namedType {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                      }
                    }
                  }
                  signature {
                    name: "arrayType"
                    owner {
                      pkg: "scala.reflect"
                      name: "FactoryClassManifest$"
                    }
                    paramType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "OptManifest"
                      }
                    }
                    returnType {
                      type: Named
                      namedType {
                        pkg: "scala.reflect"
                        name: "FactoryClassManifest"
                      }
                    }
                  }
                  argument {
                    type: MethodCall
                    methodCall {
                      receiver {
                        type: FieldRef
                        fieldRef {
                          enclosingType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest$"
                          }
                          name: "MODULE$"
                          tpe {
                            type: Named
                            namedType {
                              pkg: "scala.reflect"
                              name: "FactoryClassManifest$"
                            }
                          }
                        }
                      }
                      signature {
                        name: "arrayType"
                        owner {
                          pkg: "scala.reflect"
                          name: "FactoryClassManifest$"
                        }
                        paramType {
                          type: Named
                          namedType {
                            pkg: "scala.reflect"
                            name: "OptManifest"
                          }
                        }
                        returnType {
                          type: Named
                          namedType {
                            pkg: "scala.reflect"
                            name: "FactoryClassManifest"
                          }
                        }
                      }
                      argument {
                        type: MethodCall
                        methodCall {
                          receiver {
                            type: FieldRef
                            fieldRef {
                              enclosingType {
                                pkg: "scala.reflect"
                                name: "FactoryManifest$"
                              }
                              name: "MODULE$"
                              tpe {
                                type: Named
                                namedType {
                                  pkg: "scala.reflect"
                                  name: "FactoryManifest$"
                                }
                              }
                            }
                          }
                          signature {
                            name: "Int"
                            owner {
                              pkg: "scala.reflect"
                              name: "FactoryManifest$"
                            }
                            returnType {
                              type: Named
                              namedType {
                                pkg: "scala.reflect"
                                name: "FactoryManifest$AnyValManifest"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
member {
  type: Method
  modifiers {
    isPublic: true
  }
  method {
    isConstructor: true
    name: "new"
    returnType {
      type: Named
      namedType {
        name: "Arrays"
      }
    }
    body {
      type: Block
      block {
        statement {
          type: Expr
          expr {
            type: MethodCall
            methodCall {
              receiver {
                type: ThisRef
              }
              signature {
                name: "new"
                owner {
                  pkg: "java.lang"
                  name: "Object"
                }
                returnType {
                  type: Named
                  namedType {
                    pkg: "java.lang"
                    name: "Object"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
